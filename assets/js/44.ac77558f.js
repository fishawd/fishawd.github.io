(window.webpackJsonp=window.webpackJsonp||[]).push([[44],{413:function(t,a,s){"use strict";s.r(a);var r=s(43),e=Object(r.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"设计模式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#设计模式"}},[t._v("#")]),t._v(" 设计模式")]),t._v(" "),s("h2",{attrs:{id:"什么是设计模式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#什么是设计模式"}},[t._v("#")]),t._v(" 什么是设计模式")]),t._v(" "),s("h2",{attrs:{id:"uml类图"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#uml类图"}},[t._v("#")]),t._v(" UML类图")]),t._v(" "),s("h2",{attrs:{id:"java抽象类和接口的区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#java抽象类和接口的区别"}},[t._v("#")]),t._v(" Java抽象类和接口的区别")]),t._v(" "),s("h2",{attrs:{id:"设计原则"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#设计原则"}},[t._v("#")]),t._v(" 设计原则")]),t._v(" "),s("ul",[s("li",[t._v("单一职责原则")]),t._v(" "),s("li",[t._v("开闭原则")]),t._v(" "),s("li",[t._v("依赖倒转原则")]),t._v(" "),s("li",[t._v("里氏替换原则")]),t._v(" "),s("li",[t._v("迪米特法则")])])])}),[],!1,null,null,null);a.default=e.exports}}]);